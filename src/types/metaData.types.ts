// Generated by https://quicktype.io

export interface IAssetMetaData {
  id:                              ID;
  symbol:                          string;
  name:                            string;
  asset_platform_id:               string;
  platforms:                       Platform[];
  block_time_in_minutes:           number;
  hashing_algorithm:               null;
  categories:                      Category[];
  public_notice:                   null;
  additional_notices:              any[];
  localization:                    Tion[];
  description:                     Tion[];
  links:                           Links;
  image:                           Image;
  country_origin:                  string;
  genesis_date:                    null;
  contract_address:                string;
  sentiment_votes_up_percentage:   string;
  sentiment_votes_down_percentage: string;
  market_cap_rank:                 number;
  coingecko_rank:                  number;
  coingecko_score:                 string;
  developer_score:                 string;
  community_score:                 string;
  liquidity_score:                 string;
  public_interest_score:           string;
  market_data:                     MarketData;
  community_data:                  CommunityData;
  developer_data:                  DeveloperData;
  public_interest_stats:           PublicInterestStats;
  status_updates:                  any[];
  last_updated:                    string;
  tickers:                         Ticker[];
}

export enum Category {
  Null = "null",
  Red = "red",
  Yellow = "yellow",
}

export interface CommunityData {
  facebook_likes:              null;
  twitter_followers:           number;
  reddit_average_posts_48h:    string;
  reddit_average_comments_48h: string;
  reddit_subscribers:          number;
  reddit_accounts_active_48h:  number;
  telegram_channel_user_count: null;
}

export interface Tion {
  locale: string;
  text:   string;
}

export interface DeveloperData {
  forks:                            number;
  stars:                            number;
  subscribers:                      number;
  total_issues:                     number;
  closed_issues:                    number;
  pull_requests_merged:             number;
  pull_request_contributors:        number;
  code_additions_deletions_4_weeks: CodeAdditionsDeletions4_Weeks;
  commit_count_4_weeks:             number;
}

export interface CodeAdditionsDeletions4_Weeks {
  additions: null;
  deletions: null;
}

export enum ID {
  Opendao = "opendao",
}

export interface Image {
  thumb: string;
  small: string;
  large: string;
}

export interface Links {
  homepage:                      string[];
  blockchain_site:               string[];
  official_forum_url:            string[];
  chat_url:                      string[];
  announcement_url:              string[];
  twitter_screen_name:           string;
  facebook_username:             string;
  bitcointalk_thread_identifier: null;
  telegram_channel_identifier:   string;
  subreddit_url:                 Category;
  repos_url:                     ReposURL;
}

export interface ReposURL {
  github:    any[];
  bitbucket: any[];
}

export interface MarketData {
  current_price:                                Ath[];
  total_value_locked:                           string;
  mcap_to_tvl_ratio:                            null;
  fdv_to_tvl_ratio:                             null;
  roi:                                          null;
  ath:                                          Ath[];
  ath_change_percentage:                        AthChangePercentage[];
  ath_date:                                     AthDateElement[];
  atl:                                          Ath[];
  atl_change_percentage:                        AthChangePercentage[];
  atl_date:                                     AthDateElement[];
  market_cap:                                   FullyDilutedValuation[];
  market_cap_rank:                              number;
  fully_diluted_valuation:                      FullyDilutedValuation[];
  total_volume:                                 FullyDilutedValuation[];
  high_24h:                                     Ath[];
  low_24h:                                      Ath[];
  price_change_24h:                             string;
  price_change_percentage_24h:                  string;
  price_change_percentage_7d:                   string;
  price_change_percentage_14d:                  string;
  price_change_percentage_30d:                  string;
  price_change_percentage_60d:                  string;
  price_change_percentage_200d:                 string;
  price_change_percentage_1y:                   string;
  market_cap_change_24h:                        string;
  market_cap_change_percentage_24h:             string;
  price_change_24h_in_currency:                 Ath[];
  price_change_percentage_1h_in_currency:       AthChangePercentage[];
  price_change_percentage_24h_in_currency:      AthChangePercentage[];
  price_change_percentage_7d_in_currency:       AthChangePercentage[];
  price_change_percentage_14d_in_currency:      AthChangePercentage[];
  price_change_percentage_30d_in_currency:      AthChangePercentage[];
  price_change_percentage_60d_in_currency:      AthChangePercentage[];
  price_change_percentage_200d_in_currency:     any[];
  price_change_percentage_1y_in_currency:       any[];
  market_cap_change_24h_in_currency:            FullyDilutedValuation[];
  market_cap_change_percentage_24h_in_currency: AthChangePercentage[];
  total_supply:                                 string;
  max_supply:                                   string;
  circulating_supply:                           string;
  last_updated:                                 string;
}

export interface Ath {
  currency: string;
  price:    string;
}

export interface AthChangePercentage {
  currency:   string;
  percentage: string;
}

export interface AthDateElement {
  currency: string;
  date:     string;
}

export interface FullyDilutedValuation {
  currency: string;
  volume:   string;
}

export interface Platform {
  platform:         string;
  contract_address: string;
}

export interface PublicInterestStats {
  alexa_rank:   null;
  bing_matches: null;
}

export interface Ticker {
  base:                      Base;
  target:                    Target;
  market:                    Market;
  last:                      string;
  volume:                    string;
  converted_last:            Ath[];
  converted_volume:          FullyDilutedValuation[];
  trust_score:               Category;
  bid_ask_spread_percentage: string;
  timestamp:                 string;
  last_traded_at:            string;
  last_fetch_at:             string;
  is_anomaly:                boolean;
  is_stale:                  boolean;
  trade_url:                 string;
  token_info_url:            null | string;
  coin_id:                   ID;
  target_coin_id:            TargetCoinID | null;
}

export enum Base {
  Sos = "SOS",
  The0X3B484B82567A09E2588A13D54D032153F0C0Aee0 = "0X3B484B82567A09E2588A13D54D032153F0C0AEE0",
}

export interface Market {
  name:                  string;
  identifier:            string;
  has_trading_incentive: boolean;
}

export enum Target {
  The0Xc02Aaa39B223Fe8D0A0E5C4F27Ead9083C756Cc2 = "0XC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2",
  Usd = "USD",
  Usdt = "USDT",
}

export enum TargetCoinID {
  Tether = "tether",
  Weth = "weth",
}
